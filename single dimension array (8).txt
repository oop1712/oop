#include <iostream>
using namespace std;

class CppArray {
private:
    int a[10], i, j, n, b[10], temp;

public:
    void get();
    void print();
    void sort();
    void range();
    void exchange();
    int size();
};

void CppArray::get() {
    cout << "\nEnter the limit of array (max 10): ";
    cin >> n;
    if (n > 10) {
        cout << "\nArray limit exceeds maximum size (10). Setting limit to 10.";
        n = 10;
    }
    cout << "\nEnter the array elements: ";
    for (i = 0; i < n; i++) {
        cout << "\na[" << i << "] = ";
        cin >> a[i];
    }
}

void CppArray::print() {
    cout << "\nThe entered array is: ";
    for (i = 0; i < n; i++) {
        cout << "\na[" << i << "] = " << a[i];
    }
}

void CppArray::range() {
    if (n > 0) {
        int min_val = a[0], max_val = a[0];
        for (i = 1; i < n; i++) {
            if (a[i] < min_val) min_val = a[i];
            if (a[i] > max_val) max_val = a[i];
        }
        cout << "\nThe range of array is from " << min_val << " to " << max_val;
    } else {
        cout << "\nArray is empty. No range to display.";
    }
}

void CppArray::exchange() {
    for (i = 0; i < n; i++) {
        b[i] = a[i];
    }
    cout << "\nThe exchanged array is: ";
    for (i = 0; i < n; i++) {
        cout << "\nb[" << i << "] = " << b[i];
    }
}

void CppArray::sort() {
    for (i = 0; i < n - 1; i++) {
        for (j = i + 1; j < n; j++) {
            if (a[i] > a[j]) {
                temp = a[i];
                a[i] = a[j];
                a[j] = temp;
            }
        }
    }
    cout << "\nThe sorted array is: ";
    for (i = 0; i < n; i++) {
        cout << "\na[" << i << "] = " << a[i];
    }
}

int CppArray::size() {
    return n;
}

int main() {
    int array_size;
    CppArray obj;
    obj.get();
    obj.print();
    obj.range();
    obj.exchange();
    obj.sort();
    array_size = obj.size();
    cout << "\nThe size of array is " << array_size;
    return 0;
}
